using System.Collections.Generic;
using System.Collections;
using UnityEngine;
using TMPro;
using Unity.VisualScripting;

public class QuestionScript : MonoBehaviour
{
    public BattleOperatorScript battleOperatorScript;

    private List<string> questions = new List<string> {"What is 7+5?", "3x = 12; solve for x",
    "Simplify (12/4) + 5", "What is the area of a rectangle with a length of 8 and width of 3?",
    "Which number is a multiple of 6?"};
    private List<List<string>> responses = new List<List<string>> {
    new List<string>{"A) 10", "B) 11", "C) 12", "D) 13"}, new List<string>{"A) 3", "B) 4", "C) 6", "D) 5"},
    new List<string>{"A) 7", "B) 8", "C) 6", "D) 5"}, new List<string>{"A) 24", "B) 11", "C) 32", "D) 16"},
    new List<string>{"A) 11", "B) 18", "C) 13", "D) 9"}};
    private List<int> answers = new List<int> {2, 1, 1, 0, 1};

    public TextMeshProUGUI QuestionText;
    public TextMeshProUGUI[] ResponseTexts;
    public TextMeshProUGUI Correct;

    public int currentQuestion;
    public int lastQuestion;
    public int questionsAnswered = 0;
    public int answersCorrect = 0;
    // Start is called once before the first execution of Update after the MonoBehaviour is created
    void Start()
    {
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    public void GetNewQuestion()
    {
        Correct.text = "";
        while(currentQuestion == lastQuestion)
        {
            currentQuestion = Random.Range(0, questions.Count);
        }
        lastQuestion = currentQuestion;
        QuestionText.text = questions[currentQuestion];

        for(int i = 0; i < 4; i++)
        {
            ResponseTexts[i].text = responses[currentQuestion][i];
        }
    }

    public void CheckAnswer(int answerSelected)
    {
        StartCoroutine(AnswerSequence(answerSelected));
    }

    IEnumerator AnswerSequence(int answerSelected)
    {
        yield return null;
        questionsAnswered++;
        if(answerSelected==answers[currentQuestion])
        {
            answersCorrect++;
            Correct.text = "Correct!";
            bool clicked = false;
            while(!clicked){
                yield return null;
                if(Input.GetKeyDown(KeyCode.Mouse0))
                {
                    clicked = true;
                }
            }
            clicked = false;

            if(questionsAnswered == 1)
            {
                GetNewQuestion();
            } else {
                battleOperatorScript.playerMana+=answersCorrect;
                if(battleOperatorScript.playerMana>4)
                {
                    battleOperatorScript.playerMana = 4;
                }
                this.gameObject.SetActive(false);
                battleOperatorScript.TurnSelected();
            }
        } else {
            Correct.text = "Wrong";
            bool clicked = false;
            while(!clicked){
                yield return null;
                if(Input.GetKeyDown(KeyCode.Mouse0))
                {
                    clicked = true;
                }
            }
            clicked = false;
            battleOperatorScript.playerMana+=answersCorrect;
            if(battleOperatorScript.playerMana>4)
            {
                battleOperatorScript.playerMana = 4;
            }
            this.gameObject.SetActive(false);
            battleOperatorScript.TurnSelected();
        }
    }
}
